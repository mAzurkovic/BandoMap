<div id="map"></div>

<div class="fixed-action-btn horizontal">
  <a class="btn-floating btn-large waves-effect waves-light red modal-trigger" href="#modal1">
     <i class="material-icons">add</i>
   </a>
</div>
<!-- Modal Structure -->
<div id="modal1" class="modal modal-fixed-footer">
  <div class="modal-content">
    <h4>Add a spot</h4>
    <div class="row">
      <form class="col s12" action="/add" method="POST">
        <div class="row">
          <div class="input-field col s6">
            <input id="address" type="text" name="address" class="validate">
            <label for="address">Address</label>
          </div>
          <div class="input-field col s6">
            <input id="city" type="text" name="city" class="validate">
            <label for="city">City</label>
          </div>

          <div class="input-field col s6">
            <select class='select' name="type">
                       <option value="" disabled selected>Spot Type</option>
                       <option value="Field" name="field">Field</option>
                       <option value="Park" name="park">Park</option>
                       <option value="Forest" name="forest">Forest</option>
                       <option value="Parking Lot" name="parkingLotOut">Parking Lot (Outdoor)</option>
                       <option value="Parking Lot (Indoor)" name="parkingLotIn">Parking Lot (Indoor)</option>
                       <option value="Building(s)" name="buildings">Building(s)</option>
                       <option value="Other" name="other">Other</option>
                     </select>
            <label>Type of spot...</label>
          </div>

          <div class="input-field col s6">
            <select name="goodFor">
                       <option value="" disabled selected>Good For</option>
                       <option value="Racing" name="racing">Racing</option>
                       <option value="Freestyle" name="freestyle">Freestyle</option>
                       <option value="Longrange" name="longrange">Longrange</option>
                       <option value="Everything" name="everything">Everything</option>
                     </select>
            <label>What kind of flying is best here...</label>
          </div>
          Has an outlet?
          <p>
            <input name="yes" type="radio" id="test1" />
            <label for="test1">Yes</label>
          </p>
          <p>
            <input name="no" type="radio" id="test2" />
            <label for="test2">No</label>
          </p>

        </div>
        <button class="btn waves-effect waves-light" type="submit" name="action">Add Spot
                      <i class="material-icons right">send</i>
                    </button>

      </form>
    </div>
  </div>
</div>

<!-- Modal Structure -->
  <div id="modalAbout" class="modal">
    <div class="modal-content">
      <h4>About</h4>
      <div class="divider"></div>
      <h5>General</h5>
      <p><b>BandoMap</b> is an application that allows for FPV pilots to discover and share new flying locations in thier area. To add a new flying spot,
        simply press the add button in the bottom right, or from the navigation bar and fill out the form with the information needed.</p>
      <h5>Version</h5>
      <p>
        The current version of this application is <b>Alpha V0.1</b>.
      </p>
      <h5>Code base</h5>
      <p>This is an opensource project initially created by Mattias Zurkovic. If you want to contribute feel free to submit a pull request at the GutHib page.</p>
    </div>
  </div>

</body>

<script type="text/javascript">
var map, infoWindow;
var spots = {{{spots}}}; // this is the location data from the database

function initMap() {
  latLng = new google.maps.LatLng(49, 123)

  map = new google.maps.Map(document.getElementById('map'), {
    center: {lat: -34.397, lng: 150.644},
    zoom: 12,
    disableDefaultUI: true,
    styles: [{"featureType":"water","elementType":"geometry","stylers":[{"color":"#004358"}]},{"featureType":"landscape","elementType":"geometry","stylers":[{"color":"#1f8a70"}]},{"featureType":"poi","elementType":"geometry","stylers":[{"color":"#1f8a70"}]},{"featureType":"road.highway","elementType":"geometry","stylers":[{"color":"#fd7400"}]},{"featureType":"road.arterial","elementType":"geometry","stylers":[{"color":"#1f8a70"},{"lightness":-20}]},{"featureType":"road.local","elementType":"geometry","stylers":[{"color":"#1f8a70"},{"lightness":-17}]},{"elementType":"labels.text.stroke","stylers":[{"color":"#ffffff"},{"visibility":"on"},{"weight":0.9}]},{"elementType":"labels.text.fill","stylers":[{"visibility":"on"},{"color":"#ffffff"}]},{"featureType":"poi","elementType":"labels","stylers":[{"visibility":"simplified"}]},{"elementType":"labels.icon","stylers":[{"visibility":"off"}]},{"featureType":"transit","elementType":"geometry","stylers":[{"color":"#1f8a70"},{"lightness":-10}]},{},{"featureType":"administrative","elementType":"geometry","stylers":[{"color":"#1f8a70"},{"weight":0.7}]}]
  });
  infoWindow = new google.maps.InfoWindow;

  // Try HTML5 geolocation.
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var pos = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };

      map.setCenter(pos);
    }, function() {
      handleLocationError(true, infoWindow, map.getCenter());
    });
  } else {
    // Browser doesn't support Geolocation
    handleLocationError(false, infoWindow, map.getCenter());
  }

  /* map.addListener('click', function(e) {
   placeMarkerAndPanTo(e.latLng, map);
 }); */

  for (var i = 0; i < spots.length; i++) { // loop through all the locations and render a marker
    console.log(spots[i].coords);
    var outlet = "No";
    if (spots[i].isOutlet) { outlet = "Yes"; }
    addMarker(spots[i].coords, spots[i].address, spots[i]._id, spots[i].points, spots[i].type, spots[i].goodFor, outlet);
  }

}

function handleLocationError(browserHasGeolocation, infoWindow, pos) {
  infoWindow.setPosition(pos);
  infoWindow.setContent(browserHasGeolocation ?
                        'Error: The Geolocation service failed.' :
                        'Error: Your browser doesn\'t support geolocation.');
  infoWindow.open(map);
}

// adds a marker on map when user clicks on a place on the map
function placeMarkerAndPanTo(latLng, map) {
  var marker = new google.maps.Marker({
    position: latLng,
    map: map
  });
  map.panTo(latLng);
}

// adds a marker as well as an info box containing the rating of the spot
function addMarker(coords, address, id, points, type, goodFor, hasOutlet) {
  var upvote = "/upvote/" + id;
  // string that is used to render the html in the info box
  var contentString2 = '<div id="content" class="info"><div class="row"><div class="col s12" id="title"><br>' + address + '</div></div><div class="row"><div>'+
'<form action="/upvote/'+ id +'" method="POST">'+
'<input class="vote-button" type="submit" name="upvote" value="↑"/></form>'+ points +
'<form action="/downvote/'+ id +'" method="POST">'+
'<input class="vote-button" type="submit" name="downvote" value="↓"/>'+
'</form></div><div>'+
'<ul><li>This spot is good for <b>' + goodFor + '</b> and is a <b>' + type + '</b>.</li><li> <div>Are you able to charge packs here: <b>' + hasOutlet +
'</b></li></ul></div></div></div></div>';

  var infowindow = new google.maps.InfoWindow({
    content: contentString2
  });

  var icon = {
    url: "https://i.imgur.com/2b7gHaQ.png", // url
    scaledSize: new google.maps.Size(50, 50)
  };

  var marker = new google.maps.Marker({
     position: coords,
     map: map,
     visible: true
  });

  marker.addListener('click', function() {
    infowindow.open(map, marker);
  });

}

</script>

<!-- Reference javascripts for Google Maps API -->
<script type="text/javascript" src="/javascripts/extra.js"></script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBktahDyXxT0XCyMnbgb0yftsMmJ4rlN1k&callback=initMap"></script>
